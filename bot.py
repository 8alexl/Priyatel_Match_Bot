import telebot
from telebot import types
import sqlite3
import os
from dotenv import load_dotenv

# –∑–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')

# —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —á–∞—Ç
chat_requests = {}
# —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
chats = {}
# —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
active_chats = {}
# —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏
connections = {}

# –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
class ChatMessage:
    def __init__(self, sender, text):
        self.sender = sender
        self.text = text

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop
@bot.message_handler(commands=['stop'])
def stop_chat(message):
    if message.chat.id in active_chats:
        # —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        chat_id = message.chat.id
        partner_chat_id = connections.get(chat_id)
        del active_chats[chat_id]
        if partner_chat_id:
            del active_chats[partner_chat_id]
        connections[chat_id] = None
        if partner_chat_id:
            connections[partner_chat_id] = None
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —á–∞—Ç–∞
        bot.send_message(chat_id, '–ü–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /match')
        if partner_chat_id:
            bot.send_message(partner_chat_id, '–ü–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /match')
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
        search_button = types.KeyboardButton('–ü–æ–∏—Å–∫üîç')
        search_keyboard = types.ReplyKeyboardMarkup(row_width=1)
        search_keyboard.add(search_button)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
@bot.message_handler(func=lambda message: message.chat.id in active_chats)
def handle_messages(message):
    chat_id = message.chat.id
    current_chat = active_chats[chat_id]
    if (message.text != '/stop') and (message.text != '/help'):
        # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.from_user.username:
            sender = "@" + message.from_user.username
        else:
            sender = message.from_user.first_name

        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        current_chat.append(ChatMessage(sender, message.text))

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É
        if chat_id in connections:
            receiver_chat_id = connections[chat_id]
            receiver_message = f"{sender}: {message.text}"
            bot.send_message(receiver_chat_id, receiver_message)
        else:
            bot.send_message(chat_id, '–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...')

    if message.text == '/help':
        # –≤—ã–∑–æ–≤ —Å–ø—Ä–∞–≤–∫–∏
        show_help(message)

    if message.text == '/stop':
        # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–∞—Ç–∞
        stop_chat(message)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ —á–∞—Ç–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@bot.message_handler(func=lambda message: message.text.startswith('–ù–∞—á–∞—Ç—å —á–∞—Ç —Å'))
def start_chat(message):
    chat_initiator_id = message.chat.id
    if chat_initiator_id in active_chats:
        bot.send_message(chat_initiator_id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã —É–∂–µ –≤–µ–¥—ë—Ç–µ –ø–µ—Ä–µ–ø–∏—Å–∫—É.')
        return

    # –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ username –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = message.text.split('–ù–∞—á–∞—Ç—å —á–∞—Ç —Å ')[1]
    # –ø–æ–∏—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('SELECT id, name, age, sex FROM userec WHERE nick = ?', (username,))
    user = cursor.fetchone()

    if user:
        chat_initiator_id = message.chat.id
        chat_receiver_id = user[0]

        chat_requests[chat_receiver_id] = chat_initiator_id
        keyboard = types.InlineKeyboardMarkup()
        accept_button = types.InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å üòä", callback_data=f"accept_{chat_receiver_id}")
        decline_button = types.InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å ü§¨", callback_data=f"decline_{chat_receiver_id}")
        keyboard.add(accept_button, decline_button)

        # –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–µ —á–∞—Ç–∞
        cursor.execute('SELECT name, age, sex FROM userec WHERE id = ?', (chat_initiator_id,))
        initiator = cursor.fetchone()

        if initiator:
            initiator_name = initiator[0]
            initiator_age = initiator[1]
            initiator_sex = initiator[2]

            # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_info = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {initiator_name} —Ö–æ—á–µ—Ç –Ω–∞—á–∞—Ç—å —á–∞—Ç —Å –≤–∞–º–∏.\n\n"
            user_info += f"–í–æ–∑—Ä–∞—Å—Ç: {initiator_age}\n"
            user_info += f"–ü–æ–ª: {initiator_sex}\n"

            # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—Ç–æ—Ä–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(chat_receiver_id, user_info + "–ü—Ä–∏–Ω—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å?", reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, '–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
    else:
        bot.send_message(message.chat.id, '–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —á–∞—Ç
@bot.callback_query_handler(func=lambda call: call.data.startswith('accept_'))
def accept_callback(call):
    chat_receiver_id = int(call.data.split('_')[1])
    if chat_receiver_id in active_chats:
        bot.send_message(chat_receiver_id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {bot.get_chat(chat_receiver_id).username} —É–∂–µ –≤–µ–¥—ë—Ç –ø–µ—Ä–µ–ø–∏—Å–∫—É.')
        return
    if chat_receiver_id in chat_requests:
        chat_initiator_id = chat_requests[chat_receiver_id]

        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        active_chats[chat_initiator_id] = []
        active_chats[chat_receiver_id] = []

        # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —á–∞—Ç–∞
        connections[chat_initiator_id] = chat_receiver_id
        connections[chat_receiver_id] = chat_initiator_id

        # —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —á–∞—Ç
        del chat_requests[chat_receiver_id]

        receiver_nickname = "@" + bot.get_chat(chat_receiver_id).username
        bot.send_message(chat_initiator_id, f'–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {receiver_nickname} –ø—Ä–∏–Ω—è—Ç. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—èü•∞.')
        
        initiator_nickname = "@" + bot.get_chat(chat_initiator_id).username
        if receiver_nickname != initiator_nickname:
            bot.send_message(chat_receiver_id, f'–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ —á–∞—Ç —Å {initiator_nickname}. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—èü•∞.')
    else:
        bot.send_message(chat_receiver_id, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —á–∞—Ç.')

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —á–∞—Ç
@bot.callback_query_handler(func=lambda call: call.data.startswith('decline_'))
def decline_callback(call):
    chat_receiver_id = int(call.data.split('_')[1])
    if chat_receiver_id in active_chats:
        bot.send_message(chat_receiver_id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {bot.get_chat(chat_receiver_id).username} —É–∂–µ –≤–µ–¥—ë—Ç –ø–µ—Ä–µ–ø–∏—Å–∫—É.')
        return
    if chat_receiver_id in chat_requests:
        chat_initiator_id = chat_requests[chat_receiver_id]

        # —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —á–∞—Ç
        del chat_requests[chat_receiver_id]

        # —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä—É —á–∞—Ç–∞ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
        bot.send_message(chat_initiator_id, f'–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {bot.get_chat(chat_receiver_id).username} –æ—Ç–∫–ª–æ–Ω–µ–Ω.')
        bot.send_message(chat_receiver_id, '–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ —á–∞—Ç.')
    else:
        bot.send_message(chat_receiver_id, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —á–∞—Ç.')

# —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()

# —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('CREATE TABLE IF NOT EXISTS userec (id INTEGER PRIMARY KEY, nick TEXT, name TEXT, age INTEGER, sex TEXT, interest1 TEXT, interest2 TEXT, interest3 TEXT)')

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    connections[message.chat.id] = None
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /register. –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–º–∞–Ω–¥–∞–º –±–æ—Ç–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help.')

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /register
@bot.message_handler(commands=['register'])
def start_registration(message):
    connections[message.chat.id] = None
    bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã.\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    bot.register_next_step_handler(message, get_name)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_name(message):
    # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    usrname = "@" + message.from_user.username
    try:
        cursor.execute('INSERT INTO userec (id) VALUES (?)', (message.chat.id,))
    except sqlite3.IntegrityError:
        pass
    cursor.execute('UPDATE userec SET nick = ? WHERE id = ?', (usrname, message.chat.id))
    cursor.execute('UPDATE userec SET name = ? WHERE id = ?', (message.text, message.chat.id))
    conn.commit()

    # –∑–∞–ø—Ä–æ—Å –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    bot.register_next_step_handler(message, get_age)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_age(message):
    # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('UPDATE userec SET age = ? WHERE id = ?', (message.text, message.chat.id))
    conn.commit()

    # –∑–∞–ø—Ä–æ—Å –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = types.ReplyKeyboardMarkup(row_width=2)
    male_button = types.KeyboardButton('–ú—É–∂—Å–∫–æ–πüë®')
    female_button = types.KeyboardButton('–ñ–µ–Ω—Å–∫–∏–πüë©')
    keyboard.add(male_button, female_button) ## –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª:', reply_markup=keyboard)
    bot.register_next_step_handler(message, get_sex)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_sex(message):
    # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('UPDATE userec SET sex = ? WHERE id = ?', (message.text, message.chat.id))
    conn.commit()

    remove_keyboard = types.ReplyKeyboardRemove()

    # –∑–∞–ø—Ä–æ—Å –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
    interest1_button = types.KeyboardButton('–ß—Ç–µ–Ω–∏–µüìñ')
    interest2_button = types.KeyboardButton('–í–∏–¥–µ–æ–∏–≥—Ä—ãüéÆ')
    interest3_button = types.KeyboardButton('–°–ø–æ—Ä—Ç‚öΩüèÄ')
    done_button = types.KeyboardButton('–ì–æ—Ç–æ–≤–æ')
    keyboard.add(interest1_button, interest2_button, interest3_button, done_button)

    bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã (–≤—ã–±–µ—Ä–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ):', reply_markup=keyboard)
    bot.register_next_step_handler(message, handle_interests, [])

def handle_interests(message, interests):
    if message.text == '–ì–æ—Ç–æ–≤–æ':
        # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        sorted_interests = sorted(interests, key=lambda x: x.lower(), reverse=True)
        interest1 = None
        interest2 = None
        interest3 = None

        for interest in sorted_interests:
            if interest == '–í–∏–¥–µ–æ–∏–≥—Ä—ãüéÆ':
                interest1 = interest
            elif interest == '–ß—Ç–µ–Ω–∏–µüìñ':
                interest2 = interest
            elif interest == '–°–ø–æ—Ä—Ç‚öΩüèÄ':
                interest3 = interest

        cursor.execute('UPDATE userec SET interest1 = ?, interest2 = ?, interest3 = ? WHERE id = ?', (interest1, interest2, interest3, message.chat.id))
        conn.commit()

        # –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ!', reply_markup=types.ReplyKeyboardRemove())
        search_button = types.KeyboardButton('–ü–æ–∏—Å–∫üîç')
        search_keyboard = types.ReplyKeyboardMarkup(row_width=1)
        search_keyboard.add(search_button)
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤!', reply_markup=search_keyboard)
    else:
        interests.append(message.text)
        # –≤—ã–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞
        next_interest_keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
        next_interest_keyboard.add(types.KeyboardButton('–ß—Ç–µ–Ω–∏–µüìñ'), types.KeyboardButton('–í–∏–¥–µ–æ–∏–≥—Ä—ãüéÆ'), types.KeyboardButton('–°–ø–æ—Ä—Ç‚öΩüèÄ'), types.KeyboardButton('–ì–æ—Ç–æ–≤–æ'))
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏–ª–∏ –Ω–∞–∂–º–∏ "–ì–æ—Ç–æ–≤–æ"', reply_markup=next_interest_keyboard)
        bot.register_next_step_handler(message, handle_interests, interests)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
def handle_match(message):
    cursor.execute('SELECT interest1, interest2, interest3 FROM userec WHERE id = ?', (message.chat.id,))
    interests = cursor.fetchone()

    if interests:
        cursor.execute('SELECT id, nick, name, age, sex FROM userec WHERE id != ? AND ((interest1 = ? OR interest2 = ? OR interest3 = ?) OR (interest1 = ? OR interest2 = ? OR interest3 = ?) OR (interest1 = ? OR interest2 = ? OR interest3 = ?))',
                       (message.chat.id, interests[0], interests[0], interests[0], interests[1], interests[1], interests[1], interests[2], interests[2], interests[2]))
        matches = cursor.fetchall()

        if matches:
            response = '–ù–∞–π–¥–µ–Ω—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n'
            for match in matches:
                info = f'ID: {match[0]}\nUsername: {match[1]}\n–ò–º—è: {match[2]}\n–í–æ–∑—Ä–∞—Å—Ç: {match[3]}\n–ü–æ–ª: {match[4]}'
                response += info + '\n\n'

            start_chat_keyboard = types.ReplyKeyboardMarkup(row_width=1)
            for match in matches:
                start_chat_button = types.KeyboardButton(f'–ù–∞—á–∞—Ç—å —á–∞—Ç —Å {match[1]}')
                start_chat_keyboard.add(start_chat_button)

            bot.send_message(message.chat.id, response, reply_markup=start_chat_keyboard)
        else:
            bot.send_message(message.chat.id, '–°–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ãüò≠.')
    else:
        bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥–æ–π /register')

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /match
@bot.message_handler(commands=['match'])
def command_match(message):
    handle_match(message)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∏—Å–∫üîç"
@bot.message_handler(func=lambda message: message.text == '–ü–æ–∏—Å–∫üîç')
def text_match(message):
    handle_match(message)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def show_help(message):
    help_text = '''
    –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤üòò
    
    –ö–æ–º–∞–Ω–¥—ã:
    /start - —Å—Ç–∞—Ä—Ç
    /register - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    /match - –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º
    /stop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—â–µ–Ω–∏–µ
    /help - –ø–æ–º–æ—â—å
    /about - –æ –±–æ—Ç–µ
    '''
    bot.send_message(message.chat.id, help_text)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
@bot.message_handler(commands=['about'])
def show_about(message):
    about_text = '''
    üë®‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: alexl2004 (GitHub: 8alexl) üòé
    –í–µ—Ä—Å–∏—è –æ—Ç 22.05.2023
    '''
    bot.send_message(message.chat.id, about_text)

# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()